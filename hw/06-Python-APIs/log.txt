{'base': 'stations',
 'clouds': {'all': 83},
 'cod': 200,
 'coord': {'lat': 10.9995, 'lon': 122.6711},
 'dt': 1615137907,
 'id': 1714733,
 'main': {'feels_like': 298.98,
          'grnd_level': 1008,
          'humidity': 89,
          'pressure': 1012,
          'sea_level': 1012,
          'temp': 296.85,
          'temp_max': 296.85,
          'temp_min': 296.85},
 'name': 'Dingle',
 'rain': {'1h': 0.154},
 'sys': {'country': 'PH', 'sunrise': 1615154445, 'sunset': 1615197590},
 'timezone': 28800,
 'visibility': 10000,
 'weather': [{'description': 'light rain',
              'icon': '10n',
              'id': 500,
              'main': 'Rain'}],
 'wind': {'deg': 7, 'speed': 3.5}}

'id': 1714733,
'name': 'Dingle'
'clouds': {'all': 83}
'sys': {'country': 'PH'
'dt': 1615137907
'main': {'humidity': 89,
'coord': {'lat': 10.9995, 'lon': 122.6711}
main : {'temp_max': 296.85,
'wind': {'speed': 3.5}}


394 - northern hemisphere
157 - souther hemisphere

551


# Build query URL
query_url = url + "appid=" + weather_api_key + "&q=" + city
response = requests.get(query_url).json()
pprint(response['coord']['lat'])

url = "http://api.openweathermap.org/data/2.5/weather?"
city = ['mayna','kijangggg']

error_c = []
cname = []
cnum = 1
for city in city:
    print(f'The data of city with number: {cnum} and name: {city} is getting retreived')
    query_url = url + "appid=" + weather_api_key + "&q=" + city
    response = requests.get(query_url).json()
    time.sleep(2)
    
    try:
        cname.append(city)
       
        print(response)
        print(f'The data of city with number: {cnum} and name: {city} is successfully retreived')    
    except:
        print(response['cod'])
        error_c.append(city)
        print(f'The data of city with number: {cnum} and name: {city} is not found!\n Removing from the list')
        cname.pop()
    cnum += 1

print(f'{len(error_c)} cities data cannot be retreived!')
s_city = len(city)-len(cname)
print(f'The weather data of {s_city} cities has been successfully retrieved!')


print(f'Number of cities errored out: {len(error_city)}')
print(f'Number of cities : {len(city_name)}')
print(f'Number of country : {len(country)}')
print(f'Number of cities cloudiness out: {len(cloudiness)}')
print(f'Number of cities date out: {len(date1)}')
print(f'Number of cities humidity out: {len(humidity)}')
print(f'Number of cities latitude out: {len(latitude)}')
print(f'Number of cities longitude out: {len(longitude)}')   
print(f'Number of cities max_temp out: {len(max_temp)}')
print(f'Number of cities wind_Speed out: {len(wind_Speed)}')


line_temp_eq = "y = " + str(round(slope_nt,2)) + "x + " + str(round(intercept_nt,2))
ax1.set_axisbelow(True)
plt.grid(color='gray', linestyle='dashed')
fig,ax2 = plt.subplots(1,1,figsize = (8,5))
ax2.legend(loc='center left', bbox_to_anchor=(1.0, 0.5))


{'html_attributions': [],
 'next_page_token': 'ATtYBwKofG6z6CY0B53Sz1M1wTPYAhicstiApdlvuyTVvCIXFmk-W26fzj2vUz-onlnCTi2n_mEBxGe7PtjCa_k9rY_n8IK0rhr9T7vElMpgIH9mdgvBguDtDcE_Yz-MlLh1Hqv7L5QDQXWmB0MZPJDQc8OsZHDWAtYqaDUn9xpgSBhb_rMJU4CpnT0DZfr63zwio1OU8WT062vmZ_4UAImOiAkkuK1_Mt6jszfocog16AmBBEZ6kHVPY-fgqqw7HCooJNo0C3dShgCo4bTG6XbzczC-l7SrxMDV9GL3gNe4bDACcZ0wG96WF9pwchIb4QbMZrOe8IfEeDDdulWmcLJMPxrwxk8l5kWTWy9ZFxLrY08sFIJ4ICF36jw4deKADhidg2rOsmK0FfkzeBGGvwfEIP5HsJ1sGoKClkjailLJLIRJxxptDFLcOaSA',
 'results': [{'business_status': 'OPERATIONAL',
              'geometry': {'location': {'lat': -20.26264249999999,
                                        'lng': 44.32434079999999},
                           'viewport': {'northeast': {'lat': -20.2612935197085,
                                                      'lng': 44.32568978029149},
                                        'southwest': {'lat': -20.2639914802915,
                                                      'lng': 44.32299181970849}}},
              'icon': 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/lodging-71.png',
              'name': 'Vezo HÃ´tel',
              'place_id': 'ChIJwwVMOMvWXh8RLO52U-gDZGA',
              'plus_code': {'compound_code': 'P8PF+WP Morondava, Madagascar',
                            'global_code': '5HF6P8PF+WP'},
              'rating': 5,
              'reference': 'ChIJwwVMOMvWXh8RLO52U-gDZGA',
              'scope': 'GOOGLE',
              'types': ['lodging', 'point_of_interest', 'establishment'],
              'user_ratings_total': 1,
              'vicinity': 'Morondava centre, Bethel'},


target_type = "lodging"
lat = 24.7833
lon = 85.0000
#radius = 10000
#coord = f"{lat},{lon}"
coord = "24.7833,85.0000"
name = 'gaya'
# rewrite params dict

params = {
   # "keyword":name,
    "location": coord,
    "types": target_type,
    "radius": radius,
    "key": g_key
}

# Build URL using the Google Maps API
base_url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json'

response = requests.get(base_url, params = params).json()
pprint(response)
#result = response['results']

#print(result[0]['name'])

#print(response['results'][0]['name'])


#api.openweathermap.org/data/2.5/find?q=London&units=imperial
url1 = "http://api.openweathermap.org/data/2.5/weather?"

query_url1 = url1 + "appid=" + weather_api_key + "&q=busselton" + "&units=imperial"
response1 = requests.get(query_url1).json()

pprint(response1)